$schema: http://json-schema.org/draft-07/schema#
$id: PrecomputedSharding
title: "Precomputed sharded format parameters"
type: object
properties:
  "@type":
    const: neuroglancer_uint64_sharded_v1
  preshift_bits:
    type: integer
    title: |-
      Number of low-order bits of the chunk ID that do not contribute to the
      hashed chunk ID.
    minimum: 0
    maximum: 64
  hash:
    enum:
      - identity
      - murmurhash3_x86_128
    title: |-
      Specifies the hash function used to map chunk IDs to shards.
  minishard_bits:
    type: integer
    title: |-
      Number of bits of the hashed chunk ID that determine the minishard
      number.
    description: |-
      The number of minishards within each shard is equal to
      :math:`2^{\mathrm{minishard\_bits}}`.  The minishard number is equal
      to bits :python:`[0, minishard_bits)` of the hashed chunk id.
    minimum: 0
    maximum: 64
  shard_bits:
    type: integer
    title: |-
      Number of bits of the hashed chunk ID that determine the shard number.
    description: |-
      The number of shards is equal to :math:`2^{\mathrm{shard\_bits}}`.
      The shard number is equal to bits :python:`[minishard_bits,
      minishard_bits+shard_bits)` of the hashed chunk ID.
    minimum: 0
    maximum: 64
  minishard_index_encoding:
    title: |-
      Specifies the encoding of the minishard index.
    description: |-
      Normally ``"gzip"`` is a good choice.
    enum:
      - raw
      - gzip
  data_encoding:
    title: |-
      Specifies the encoding of the data chunks.
    description: |-
      Normally ``"gzip"`` is a good choice, unless the data is expected to
      already be fully compressed.
    enum:
      - raw
      - gzip
required:
  - "@type"
  - preshift_bits
  - hash
  - minishard_bits
  - shard_bits
  - minishard_index_encoding
  - data_encoding
